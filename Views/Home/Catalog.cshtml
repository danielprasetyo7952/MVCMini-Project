@model MVCApplication.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Movie Catalog";
}

<h1 class="text-center">Movie Catalog</h1>

<div class="d-flex justify-content-end mb-3">
    <form asp-controller="Home" asp-action="Catalog" method="get">
        <div class="input-group mb-3">
            <select asp-for="MovieGenre" asp-items="Model.Genres" class="form-select" aria-label="Default select example">
                <option value="">All</option>
            </select>

            <input type="text" class="form-control" placeholder="Movie Title" aria-label="Movie Title" aria-describedby="search-button">
            <button class="btn btn-outline-secondary d-flex align-items-center" type="submit" id="search-button">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                </svg>
            </button>
        </div>
    </form>
</div>

<div class="row">
    @foreach (var item in Model.Movies!) {
        <div class="col-sm-3 mb-3">
            <div class="card">
                @if(item.PosterPath != null)
                {
                    <img src="@item.PosterPath" class="card-img-top" alt="Movie Poster" height="400px">
                }
                else
                {
                    <img src="https://cdn.vectorstock.com/i/500p/48/06/image-preview-icon-picture-placeholder-vector-31284806.jpg" class="card-img-top" alt="Movie Poster" height="400px">
                }
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">Genre : @Html.DisplayFor(modelItem => item.Genre)</li>
                        <li class="list-group-item">Price : Rp @Html.DisplayFor(modelItem => item.Price)</li>
                        <li class="list-group-item">Availibility : 
                            @if(item.IsRented == false)
                            {
                                <span class="badge bg-success">Yes</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">No</span>
                            }
                        </li>
                    </ul>
                    <a asp-controller="MovieRents" asp-action="Create" asp-route-movieId="@item.Id" class="btn btn-primary">Rent</a>
                </div>
            </div>
        </div>
    }
</div>
